// Generated by CoffeeScript 1.6.3
(function() {
  var User, request;

  User = require('../../models/lib/user');

  request = require('request');

  module.exports = {
    index: function(req, res) {
      console.log("hey");
      res.render('index.jade', {
        title: app.locals.config.name,
        user: req.user
      });
    },
    login: function(req, res) {
      res.render('login.jade', {
        title: 'Login to ' + app.locals.config.name,
        user: req.user
      });
    },
    about: function(req, res) {
      res.render('about.jade', {
        title: 'About ' + app.locals.config.name,
        user: req.user
      });
    },
    tos: function(req, res) {
      res.render('tos.jade', {
        title: app.locals.config.name + ' Terms of Service',
        user: req.user
      });
    },
    getRegister: function(req, res) {
      res.render('register.jade', {
        title: 'Register for ' + app.locals.config.name,
        user: req.user
      });
    },
    checkExists: function(req, res, next) {
      var data, query;
      data = req.query;
      query = {};
      if (data.username) {
        query['username'] = data.username;
      } else if (data.email) {
        query['email'] = data.email;
      } else {
        res.send(400, {
          'message': 'Invalid Request'
        });
      }
      User.findOne(query, function(err, user) {
        if (err) {
          res.send(500, err);
        } else if (user) {
          res.send(409, {
            'message': 'User Exists'
          });
        } else {
          res.send(200, {
            'message': 'All Clear'
          });
        }
      });
    },
    postRegister: function(req, res, next) {
      var user;
      user = new User(req.body);
      user.save(function(err) {
        if (err) {
          next(err);
        }
        res.redirect('/profile');
      });
    },
    profile: function(req, res, next) {
      User.findOne({
        '_id': req.user._id
      }, function(err, user) {
        if (err) {
          next(err);
        }
        res.render('profile.jade', {
          title: user.name.first + '\'s Profile',
          user: user
        });
      });
    },
    logout: function(req, res) {
      req.logout();
      res.redirect('/');
    },
    requestVeganizzm: function(req, res) {
      var veganizzm;
      veganizzm = 'http://veganizzm.wordpress.com/';
      return request(veganizzm, function(error, response, body) {
        console.log(body);
        return res.send(body);
      });
    }
  };

}).call(this);
