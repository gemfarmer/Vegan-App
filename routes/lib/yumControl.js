// Generated by CoffeeScript 1.6.3
(function() {
  var RecipeSearch, User, async, mongoose, request;

  console.log("fire yumControl");

  User = require('../../models/lib/user');

  request = require('request');

  async = require('async');

  mongoose = require('mongoose');

  RecipeSearch = mongoose.model('RecipeSearch', {
    q: String,
    allowedCuisine: String,
    allowedCourse: String,
    allowedAllergy: String,
    allowedDiet: String
  });

  module.exports = function(req, res) {
    var credentialKey, credentials, i, j, joinedURL, prepend, queryArray, queryObj, queryPrefix, recipeSearch, requestYummlyUrl, searchMetaParam, submittedInfo, urlExtras, _i, _len, _ref;
    submittedInfo = req.body;
    console.log(submittedInfo);
    searchMetaParam = {
      allergy: 'allergy',
      diet: 'diet',
      cuisine: 'cuisine',
      course: 'course'
    };
    credentials = {
      yummlyAppId: '48b32423',
      yummlyAppKey: "f801fe2eacf40c98299940e2824de106"
    };
    credentialKey = "_app_id=" + credentials.yummlyAppId + "&_app_key=" + credentials.yummlyAppKey;
    console.log("submittedInfo", submittedInfo);
    recipeSearch = new RecipeSearch(submittedInfo);
    recipeSearch.save(function(err, data) {
      console.log("sent to database:", data);
    });
    queryPrefix = {
      allowedCourse: "&allowedCourse[]=",
      allowedAllergy: "&allowedAllergy[]=",
      allowedDiet: "&allowedDiet[]=",
      allowedCuisine: "&allowedCuisine[]="
    };
    queryObj = {};
    for (i in submittedInfo) {
      if (typeof submittedInfo[i] === "object") {
        queryArray = [];
        prepend = function() {
          queryArray.push(queryPrefix[i] + j);
          return queryObj[i] = queryArray.join("");
        };
        _ref = submittedInfo[i];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          j = _ref[_i];
          prepend();
        }
      } else {
        queryObj[i] = queryPrefix[i] + submittedInfo[i];
      }
    }
    urlExtras = [];
    if (queryObj.allowedCourse !== false) {
      urlExtras.push(queryObj.allowedCourse);
    }
    if (queryObj.allowedAllergy !== false) {
      urlExtras.push(queryObj.allowedAllergy);
    }
    if (queryObj.allowedDiet !== false) {
      urlExtras.push(queryObj.allowedDiet);
    }
    if (queryObj.allowedCuisine !== false) {
      urlExtras.push(queryObj.allowedCuisine);
    }
    console.log('urlExtras', urlExtras);
    joinedURL = urlExtras.join("");
    requestYummlyUrl = "http://api.yummly.com/v1/api/recipes?" + credentialKey + joinedURL;
    console.log(requestYummlyUrl);
    return request(requestYummlyUrl, function(error, response, body) {
      var recipeObj, yummlyObj;
      recipeObj = {};
      yummlyObj = JSON.parse(body);
      recipeObj.totalMatchCount = yummlyObj['totalMatchCount'];
      recipeObj.criteria = yummlyObj['criteria'];
      recipeObj.matches = yummlyObj['matches'];
      recipeObj.attribution = yummlyObj['attribution'];
      res.send(recipeObj);
      res.send(yummlyObj);
    });
  };

}).call(this);
